{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Feedback/Feedback.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/Feedback/Feedback.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","FeedbackBtn","name","onLeaveFeedback","type","onClick","Feedback","options","map","option","id","Statistics","good","neutral","bad","total","positive","feedback__counts","item","Notification","message","note","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","textContent","prevState","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,iBAAmB,qCAAqC,KAAO,2B,iICAjFD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,YAAc,gC,gBCAhCD,EAAOC,QAAU,CAAC,KAAO,6B,8JCgBVC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEJ,QAAtB,UACE,6BAAKC,IACJC,M,gBCSDG,EAAc,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBAC3B,OACE,wBAAQC,KAAK,SAASL,UAAWC,IAAEC,YAAaI,QAASF,EAAzD,SACGD,KAUQI,EAzBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASJ,EAAZ,EAAYA,gBAAZ,OACf,8BACGI,EAAQC,KAAI,SAAAC,GAAM,OACjB,cAAC,EAAD,CAEEP,KAAMO,EAAOP,KACbC,gBAAiBA,GAFZM,EAAOC,U,gBCcLC,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,SAA9B,OACjB,qBAAIjB,UAAWC,IAAEiB,iBAAjB,UACE,qBAAIlB,UAAWC,IAAEkB,KAAjB,mBAA8BN,KAC9B,qBAAIb,UAAWC,IAAEkB,KAAjB,sBAAiCL,KACjC,qBAAId,UAAWC,IAAEkB,KAAjB,kBAA6BJ,KAC7B,qBAAIf,UAAWC,IAAEkB,KAAjB,oBAA+BH,KAC/B,qBAAIhB,UAAWC,IAAEkB,KAAjB,gCAA2CF,EAA3C,W,gBCCWG,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGrB,UAAWC,IAAEqB,KAAhB,SAAuBD,K,MC0DjBE,MArDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOX,EAAP,KAAaY,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOV,EAAP,KAAgBY,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOT,EAAP,KAAYY,EAAZ,KAmBA,SAASC,IACP,OAAOf,EAAOC,EAAUC,EAQ1B,OACE,sBAAKf,UAAU,MAAf,UACE,cAAC,EAAD,CAASF,MAAO,wBAAhB,SACE,cAAC,EAAD,CAAUU,QAASA,EAASJ,gBA7BlC,SAAwByB,GAEtB,OADaA,EAAEC,OAAOC,aAEpB,IAAK,OACHN,GAAQ,SAAAO,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHN,GAAW,SAAAM,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHL,GAAO,SAAAK,GAAS,OAAIA,EAAY,KAChC,MACF,QACE,aAkBF,cAAC,EAAD,CAASlC,MAAO,aAAhB,SACG8B,IAAuB,EACtB,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,IACPX,SAjBV,WACE,IAAMD,EAAQY,IACd,OAAOZ,EAAQiB,KAAKC,MAAOrB,EAAOG,EAAS,KAAO,EAehCmB,KAGZ,cAAC,EAAD,CAAcd,QAAQ,4BClDhCe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.200c0de4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__counts\":\"Statistics_feedback__counts__2uCHm\",\"item\":\"Statistics_item__3IQBR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__QOuVN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackBtn\":\"Feedback_FeedbackBtn__l0bE6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Notification_note__SZ-gd\"};","import s from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.Section}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport s from './Feedback.module.css';\nimport PropTypes from 'prop-types';\n\nconst Feedback = ({ options, onLeaveFeedback }) => (\n  <div>\n    {options.map(option => (\n      <FeedbackBtn\n        key={option.id}\n        name={option.name}\n        onLeaveFeedback={onLeaveFeedback}\n      />\n    ))}\n  </div>\n);\n\nconst FeedbackBtn = ({ name, onLeaveFeedback }) => {\n  return (\n    <button type=\"button\" className={s.FeedbackBtn} onClick={onLeaveFeedback}>\n      {name}\n    </button>\n  );\n};\n\nFeedback.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default Feedback;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positive }) => (\n  <ul className={s.feedback__counts}>\n    <li className={s.item}>Good: {good}</li>\n    <li className={s.item}>Neutral: {neutral}</li>\n    <li className={s.item}>Bad: {bad}</li>\n    <li className={s.item}>Total: {total}</li>\n    <li className={s.item}>Positive feedback: {positive}%</li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <p className={s.note}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import { useState } from 'react';\nimport options from './data/options.json';\nimport Section from './components/Section/Section';\nimport Feedback from './components/Feedback/Feedback';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nimport './App.css';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  function handleFeedback(e) {\n    const name = e.target.textContent;\n    switch (name) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  }\n\n  function countTotalFeedback() {\n    return good + neutral + bad;\n  }\n\n  function countPositiveFeedbackPercentage() {\n    const total = countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  }\n\n  return (\n    <div className=\"App\">\n      <Section title={'Please leave feedback'}>\n        <Feedback options={options} onLeaveFeedback={handleFeedback} />\n      </Section>\n      <Section title={'Statistics'}>\n        {countTotalFeedback() > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positive={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}